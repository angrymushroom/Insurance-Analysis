<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='mac' version='18.1' xml:base='https://dub01.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='EDA' path='/t/htweaver/workbooks' revision='1.0' site='htweaver' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='QUB_Insurance_Data_Assignment_Training' inline='true' name='federated.1vuwtf11x91yva1gt6eeo00ir8n1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='QUB_Insurance_Data_Assignment_Training' name='textscan.1ekqdr50w4lfh511ggkcu0osuqr4'>
            <connection class='textscan' directory='/Users/gaobotao/Desktop/UCD_BA_Program/semester2/Data_mining_MIS41270/Team_project' filename='QUB_Insurance_Data_Assignment_Training.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ekqdr50w4lfh511ggkcu0osuqr4' name='QUB_Insurance_Data_Assignment_Training.csv' table='[QUB_Insurance_Data_Assignment_Training#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='CustomerID' ordinal='0' />
            <column datatype='string' name='Title' ordinal='1' />
            <column datatype='string' name='GivenName' ordinal='2' />
            <column datatype='string' name='MiddleInitial' ordinal='3' />
            <column datatype='string' name='Surname' ordinal='4' />
            <column datatype='string' name='CreditCardType' ordinal='5' />
            <column datatype='string' name='Occupation' ordinal='6' />
            <column datatype='string' name='Gender' ordinal='7' />
            <column datatype='integer' name='Age' ordinal='8' />
            <column datatype='string' name='Location' ordinal='9' />
            <column datatype='string' name='MotorInsurance' ordinal='10' />
            <column datatype='integer' name='MotorValue' ordinal='11' />
            <column datatype='string' name='MotorType' ordinal='12' />
            <column datatype='string' name='HealthInsurance' ordinal='13' />
            <column datatype='string' name='HealthType' ordinal='14' />
            <column datatype='integer' name='HealthDependentsAdults' ordinal='15' />
            <column datatype='integer' name='HealthDependentsKids' ordinal='16' />
            <column datatype='string' name='TravelInsurance' ordinal='17' />
            <column datatype='string' name='TravelType' ordinal='18' />
            <column datatype='string' name='PrefChannel' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ekqdr50w4lfh511ggkcu0osuqr4' name='QUB_Insurance_Data_Assignment_Training.csv' table='[QUB_Insurance_Data_Assignment_Training#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='CustomerID' ordinal='0' />
            <column datatype='string' name='Title' ordinal='1' />
            <column datatype='string' name='GivenName' ordinal='2' />
            <column datatype='string' name='MiddleInitial' ordinal='3' />
            <column datatype='string' name='Surname' ordinal='4' />
            <column datatype='string' name='CreditCardType' ordinal='5' />
            <column datatype='string' name='Occupation' ordinal='6' />
            <column datatype='string' name='Gender' ordinal='7' />
            <column datatype='integer' name='Age' ordinal='8' />
            <column datatype='string' name='Location' ordinal='9' />
            <column datatype='string' name='MotorInsurance' ordinal='10' />
            <column datatype='integer' name='MotorValue' ordinal='11' />
            <column datatype='string' name='MotorType' ordinal='12' />
            <column datatype='string' name='HealthInsurance' ordinal='13' />
            <column datatype='string' name='HealthType' ordinal='14' />
            <column datatype='integer' name='HealthDependentsAdults' ordinal='15' />
            <column datatype='integer' name='HealthDependentsKids' ordinal='16' />
            <column datatype='string' name='TravelInsurance' ordinal='17' />
            <column datatype='string' name='TravelType' ordinal='18' />
            <column datatype='string' name='PrefChannel' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustomerID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CustomerID]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>CustomerID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GivenName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GivenName]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>GivenName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MiddleInitial</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MiddleInitial]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>MiddleInitial</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Surname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Surname]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>Surname</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreditCardType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CreditCardType]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>CreditCardType</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occupation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Occupation]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>Occupation</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MotorInsurance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MotorInsurance]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>MotorInsurance</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MotorValue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MotorValue]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>MotorValue</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MotorType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MotorType]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>MotorType</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HealthInsurance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HealthInsurance]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>HealthInsurance</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HealthType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HealthType]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>HealthType</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HealthDependentsAdults</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HealthDependentsAdults]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>HealthDependentsAdults</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HealthDependentsKids</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HealthDependentsKids]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>HealthDependentsKids</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TravelInsurance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TravelInsurance]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>TravelInsurance</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TravelType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TravelType]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>TravelType</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PrefChannel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PrefChannel]</local-name>
            <parent-name>[QUB_Insurance_Data_Assignment_Training.csv]</parent-name>
            <remote-alias>PrefChannel</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Age (组)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Age]' new-bin='true'>
          <bin default-name='false' value='&quot;&lt;=25&quot;'>
            <value>18</value>
            <value>19</value>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>23</value>
            <value>24</value>
            <value>25</value>
          </bin>
          <bin default-name='false' value='&quot;&lt;=55&quot;'>
            <value>26</value>
            <value>37</value>
            <value>38</value>
            <value>39</value>
            <value>40</value>
            <value>41</value>
            <value>42</value>
            <value>43</value>
            <value>44</value>
            <value>45</value>
            <value>46</value>
            <value>47</value>
            <value>48</value>
            <value>49</value>
            <value>50</value>
            <value>51</value>
            <value>52</value>
            <value>53</value>
            <value>54</value>
            <value>55</value>
          </bin>
          <bin default-name='false' value='&quot;&gt;=56&quot;'>
            <value>56</value>
            <value>57</value>
            <value>58</value>
            <value>59</value>
            <value>60</value>
            <value>61</value>
            <value>62</value>
            <value>63</value>
            <value>64</value>
            <value>65</value>
            <value>66</value>
            <value>67</value>
            <value>68</value>
            <value>69</value>
            <value>70</value>
            <value>71</value>
            <value>72</value>
            <value>73</value>
            <value>74</value>
            <value>75</value>
            <value>76</value>
            <value>77</value>
            <value>78</value>
            <value>84</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column caption='Credit Card Type' datatype='string' name='[CreditCardType]' role='dimension' type='nominal' />
      <column caption='Customer ID' datatype='integer' name='[CustomerID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Gender (组)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Gender]' new-bin='true'>
          <bin default-name='false' value='&quot;female&quot;'>
            <value>&quot;f&quot;</value>
            <value>&quot;female&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;male&quot;'>
            <value>&quot;m&quot;</value>
            <value>&quot;male&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column caption='Given Name' datatype='string' name='[GivenName]' role='dimension' type='nominal' />
      <column caption='Health Dependents Adults' datatype='integer' name='[HealthDependentsAdults]' role='measure' type='quantitative' />
      <column caption='Health Dependents Kids' datatype='integer' name='[HealthDependentsKids]' role='measure' type='quantitative' />
      <column caption='Health Insurance' datatype='string' name='[HealthInsurance]' role='dimension' type='nominal' />
      <column caption='Health Type' datatype='string' name='[HealthType]' role='dimension' type='nominal' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Middle Initial' datatype='string' name='[MiddleInitial]' role='dimension' type='nominal' />
      <column caption='Motor Insurance' datatype='string' name='[MotorInsurance]' role='dimension' type='nominal' />
      <column caption='Motor Type' datatype='string' name='[MotorType]' role='dimension' type='nominal' />
      <column caption='Motor Value' datatype='integer' name='[MotorValue]' role='measure' type='quantitative' />
      <column datatype='string' name='[PrefChannel (组)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[PrefChannel]' new-bin='true'>
          <bin default-name='false' value='&quot;Email&quot;'>
            <value>&quot;E&quot;</value>
            <value>&quot;Email&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Phone&quot;'>
            <value>&quot;P&quot;</value>
            <value>&quot;Phone&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;SMS&quot;'>
            <value>&quot;S&quot;</value>
            <value>&quot;SMS&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[PrefChannel]' role='dimension' type='nominal' />
      <column caption='Travel Insurance' datatype='string' name='[TravelInsurance]' role='dimension' type='nominal' />
      <column caption='Travel Type' datatype='string' name='[TravelType]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='QUB_Insurance_Data_Assignment_Training.csv' datatype='table' name='[__tableau_internal_object_id__].[QUB_Insurance_Data_Assignment_Training.csv_43822BAA323441C3B130EF351E3DDE9A]' role='measure' type='quantitative' />
      <column-instance column='[MotorType]' derivation='Count' name='[cnt:MotorType:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HealthType]' derivation='None' name='[none:HealthType:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[TravelType]' derivation='None' name='[none:TravelType:nk]' pivot='key' type='nominal' />
      <column-instance column='[Age]' derivation='Sum' name='[sum:Age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MotorValue]' derivation='Sum' name='[sum:MotorValue:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[排除(Gender (组),Health Type)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender (组)]' />
          <groupfilter function='level-members' level='[none:HealthType:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[排除(Gender (组),Travel Type)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender (组)]' />
          <groupfilter function='level-members' level='[none:TravelType:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>6</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
            <map to='#edc948'>
              <bucket>5</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Rural&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Urban&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;美国&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{51287756-a29d-4607-a8f5-f08ef59653ca}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[sum:Age:qk]' />
            <field name='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[sum:MotorValue:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>6</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{74f8f244-7b8e-48b0-9c7c-1ad59a564cc0}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[cnt:MotorType:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='QUB_Insurance_Data_Assignment_Training.csv' id='QUB_Insurance_Data_Assignment_Training.csv_43822BAA323441C3B130EF351E3DDE9A'>
            <properties context=''>
              <relation connection='textscan.1ekqdr50w4lfh511ggkcu0osuqr4' name='QUB_Insurance_Data_Assignment_Training.csv' table='[QUB_Insurance_Data_Assignment_Training#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='CustomerID' ordinal='0' />
                  <column datatype='string' name='Title' ordinal='1' />
                  <column datatype='string' name='GivenName' ordinal='2' />
                  <column datatype='string' name='MiddleInitial' ordinal='3' />
                  <column datatype='string' name='Surname' ordinal='4' />
                  <column datatype='string' name='CreditCardType' ordinal='5' />
                  <column datatype='string' name='Occupation' ordinal='6' />
                  <column datatype='string' name='Gender' ordinal='7' />
                  <column datatype='integer' name='Age' ordinal='8' />
                  <column datatype='string' name='Location' ordinal='9' />
                  <column datatype='string' name='MotorInsurance' ordinal='10' />
                  <column datatype='integer' name='MotorValue' ordinal='11' />
                  <column datatype='string' name='MotorType' ordinal='12' />
                  <column datatype='string' name='HealthInsurance' ordinal='13' />
                  <column datatype='string' name='HealthType' ordinal='14' />
                  <column datatype='integer' name='HealthDependentsAdults' ordinal='15' />
                  <column datatype='integer' name='HealthDependentsKids' ordinal='16' />
                  <column datatype='string' name='TravelInsurance' ordinal='17' />
                  <column datatype='string' name='TravelType' ordinal='18' />
                  <column datatype='string' name='PrefChannel' ordinal='19' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='PreChannel'>
      <table>
        <view>
          <datasources>
            <datasource caption='QUB_Insurance_Data_Assignment_Training' name='federated.1vuwtf11x91yva1gt6eeo00ir8n1' />
          </datasources>
          <datasource-dependencies datasource='federated.1vuwtf11x91yva1gt6eeo00ir8n1'>
            <column datatype='string' name='[Age (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;&lt;=25&quot;'>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
                <bin default-name='false' value='&quot;&lt;=55&quot;'>
                  <value>26</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>55</value>
                </bin>
                <bin default-name='false' value='&quot;&gt;=56&quot;'>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>84</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[PrefChannel (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[PrefChannel]' new-bin='true'>
                <bin default-name='false' value='&quot;Email&quot;'>
                  <value>&quot;E&quot;</value>
                  <value>&quot;Email&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Phone&quot;'>
                  <value>&quot;P&quot;</value>
                  <value>&quot;Phone&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;SMS&quot;'>
                  <value>&quot;S&quot;</value>
                  <value>&quot;SMS&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[PrefChannel]' role='dimension' type='nominal' />
            <column-instance column='[PrefChannel]' derivation='Count' name='[cnt:PrefChannel:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PrefChannel]' derivation='Count' name='[pcto:cnt:PrefChannel:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Age (组)]' member='&quot;&lt;=25&quot;' />
              <groupfilter function='member' level='[Age (组)]' member='&quot;&lt;=55&quot;' />
              <groupfilter function='member' level='[Age (组)]' member='&quot;&gt;=56&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]' value='103' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' />
              <text column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[pcto:cnt:PrefChannel:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[cnt:PrefChannel:qk]</rows>
        <cols>([federated.1vuwtf11x91yva1gt6eeo00ir8n1].[PrefChannel (组)] / [federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)])</cols>
      </table>
      <simple-id uuid='{ED906FB2-33EC-475A-B8F6-53A3EC9AEFFC}' />
    </worksheet>
    <worksheet name='ageDist'>
      <table>
        <view>
          <datasources>
            <datasource caption='QUB_Insurance_Data_Assignment_Training' name='federated.1vuwtf11x91yva1gt6eeo00ir8n1' />
          </datasources>
          <datasource-dependencies datasource='federated.1vuwtf11x91yva1gt6eeo00ir8n1'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='Sum' name='[sum:Age:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Age:qk]' included-values='in-range'>
            <min>0</min>
            <max>120</max>
          </filter>
          <slices>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Age:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[sum:Age:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[sum:Age:qk]</rows>
        <cols>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[sum:Age:qk]</cols>
      </table>
      <simple-id uuid='{2152DC93-747D-43DA-AF73-51E1A493B574}' />
    </worksheet>
    <worksheet name='cluster'>
      <table>
        <view>
          <datasources>
            <datasource caption='QUB_Insurance_Data_Assignment_Training' name='federated.1vuwtf11x91yva1gt6eeo00ir8n1' />
          </datasources>
          <datasource-dependencies datasource='federated.1vuwtf11x91yva1gt6eeo00ir8n1'>
            <column auto-hidden='true' caption='群集 (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{51287756-a29d-4607-a8f5-f08ef59653ca}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='群集离群点' />
                <alias key='0' value='未建立群集' />
                <alias key='1' value='群集 1' />
                <alias key='2' value='群集 2' />
                <alias key='3' value='群集 3' />
                <alias key='4' value='群集 4' />
                <alias key='5' value='群集 5' />
                <alias key='6' value='群集 6' />
                <alias key='7' value='群集 7' />
                <alias key='8' value='群集 8' />
                <alias key='9' value='群集 9' />
                <alias key='10' value='群集 10' />
                <alias key='11' value='群集 11' />
                <alias key='12' value='群集 12' />
                <alias key='13' value='群集 13' />
                <alias key='14' value='群集 14' />
                <alias key='15' value='群集 15' />
                <alias key='16' value='群集 16' />
                <alias key='17' value='群集 17' />
                <alias key='18' value='群集 18' />
                <alias key='19' value='群集 19' />
                <alias key='20' value='群集 20' />
                <alias key='21' value='群集 21' />
                <alias key='22' value='群集 22' />
                <alias key='23' value='群集 23' />
                <alias key='24' value='群集 24' />
                <alias key='25' value='群集 25' />
                <alias key='26' value='群集 26' />
                <alias key='27' value='群集 27' />
                <alias key='28' value='群集 28' />
                <alias key='29' value='群集 29' />
                <alias key='30' value='群集 30' />
                <alias key='31' value='群集 31' />
                <alias key='32' value='群集 32' />
                <alias key='33' value='群集 33' />
                <alias key='34' value='群集 34' />
                <alias key='35' value='群集 35' />
                <alias key='36' value='群集 36' />
                <alias key='37' value='群集 37' />
                <alias key='38' value='群集 38' />
                <alias key='39' value='群集 39' />
                <alias key='40' value='群集 40' />
                <alias key='41' value='群集 41' />
                <alias key='42' value='群集 42' />
                <alias key='43' value='群集 43' />
                <alias key='44' value='群集 44' />
                <alias key='45' value='群集 45' />
                <alias key='46' value='群集 46' />
                <alias key='47' value='群集 47' />
                <alias key='48' value='群集 48' />
                <alias key='49' value='群集 49' />
                <alias key='50' value='群集 50' />
              </aliases>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Motor Value' datatype='integer' name='[MotorValue]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age]' derivation='Sum' name='[sum:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MotorValue]' derivation='Sum' name='[sum:MotorValue:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:AdhocCluster:2:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.49375692009925842' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[sum:Age:qk]</rows>
        <cols>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[sum:MotorValue:qk]</cols>
      </table>
      <simple-id uuid='{F25E6933-3E22-4A4D-832E-C7ED145C7ABC}' />
    </worksheet>
    <worksheet name='healthType'>
      <table>
        <view>
          <datasources>
            <datasource caption='QUB_Insurance_Data_Assignment_Training' name='federated.1vuwtf11x91yva1gt6eeo00ir8n1' />
          </datasources>
          <datasource-dependencies datasource='federated.1vuwtf11x91yva1gt6eeo00ir8n1'>
            <column datatype='string' name='[Age (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;&lt;=25&quot;'>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
                <bin default-name='false' value='&quot;&lt;=55&quot;'>
                  <value>26</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>55</value>
                </bin>
                <bin default-name='false' value='&quot;&gt;=56&quot;'>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>84</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Health Insurance' datatype='string' name='[HealthInsurance]' role='dimension' type='nominal' />
            <column caption='Health Type' datatype='string' name='[HealthType]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column-instance column='[HealthType]' derivation='Count' name='[cnt:HealthType:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HealthInsurance]' derivation='None' name='[none:HealthInsurance:nk]' pivot='key' type='nominal' />
            <column-instance column='[HealthType]' derivation='None' name='[none:HealthType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[HealthType]' derivation='Count' name='[pcto:cnt:HealthType:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Age (组)]' member='&quot;&lt;=25&quot;' />
              <groupfilter function='member' level='[Age (组)]' member='&quot;&lt;=55&quot;' />
              <groupfilter function='member' level='[Age (组)]' member='&quot;&gt;=56&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthInsurance:nk]'>
            <groupfilter function='level-members' level='[none:HealthInsurance:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthType:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:HealthType:nk]' />
              <groupfilter function='member' level='[none:HealthType:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]</column>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthType:nk]</column>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthInsurance:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthType:nk]' value='88' />
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]' value='137' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' />
              <text column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[pcto:cnt:HealthType:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0544751882553101' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[cnt:HealthType:qk]</rows>
        <cols>([federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthType:nk] / [federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)])</cols>
      </table>
      <simple-id uuid='{B5B38888-369A-4B2F-B868-4D33F9704AE8}' />
    </worksheet>
    <worksheet name='ifhealth'>
      <table>
        <view>
          <datasources>
            <datasource caption='QUB_Insurance_Data_Assignment_Training' name='federated.1vuwtf11x91yva1gt6eeo00ir8n1' />
          </datasources>
          <datasource-dependencies datasource='federated.1vuwtf11x91yva1gt6eeo00ir8n1'>
            <column datatype='string' name='[Age (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;&lt;=25&quot;'>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
                <bin default-name='false' value='&quot;&lt;=55&quot;'>
                  <value>26</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>55</value>
                </bin>
                <bin default-name='false' value='&quot;&gt;=56&quot;'>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>84</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Health Insurance' datatype='string' name='[HealthInsurance]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column-instance column='[HealthInsurance]' derivation='Count' name='[cnt:HealthInsurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HealthInsurance]' derivation='None' name='[none:HealthInsurance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[HealthInsurance]' derivation='Count' name='[pcto:cnt:HealthInsurance:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Age (组)]' member='&quot;&lt;=25&quot;' />
              <groupfilter function='member' level='[Age (组)]' member='&quot;&lt;=55&quot;' />
              <groupfilter function='member' level='[Age (组)]' member='&quot;&gt;=56&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthInsurance:nk]'>
            <groupfilter function='level-members' level='[none:HealthInsurance:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]</column>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthInsurance:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthInsurance:nk]' value='126' />
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]' value='130' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' />
              <text column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[pcto:cnt:HealthInsurance:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.82359117269515991' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[cnt:HealthInsurance:qk]</rows>
        <cols>([federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthInsurance:nk] / [federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)])</cols>
      </table>
      <simple-id uuid='{A903A143-36E2-4CDB-B632-7B4D8122D570}' />
    </worksheet>
    <worksheet name='ifmotor'>
      <table>
        <view>
          <datasources>
            <datasource caption='QUB_Insurance_Data_Assignment_Training' name='federated.1vuwtf11x91yva1gt6eeo00ir8n1' />
          </datasources>
          <datasource-dependencies datasource='federated.1vuwtf11x91yva1gt6eeo00ir8n1'>
            <column datatype='string' name='[Age (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;&lt;=25&quot;'>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
                <bin default-name='false' value='&quot;&lt;=55&quot;'>
                  <value>26</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>55</value>
                </bin>
                <bin default-name='false' value='&quot;&gt;=56&quot;'>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>84</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Motor Insurance' datatype='string' name='[MotorInsurance]' role='dimension' type='nominal' />
            <column-instance column='[MotorInsurance]' derivation='Count' name='[cnt:MotorInsurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[MotorInsurance]' derivation='None' name='[none:MotorInsurance:nk]' pivot='key' type='nominal' />
            <column-instance column='[MotorInsurance]' derivation='Count' name='[pcto:cnt:MotorInsurance:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Age (组)]' member='&quot;&lt;=25&quot;' />
              <groupfilter function='member' level='[Age (组)]' member='&quot;&lt;=55&quot;' />
              <groupfilter function='member' level='[Age (组)]' member='&quot;&gt;=56&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:MotorInsurance:nk]'>
            <groupfilter function='member' level='[none:MotorInsurance:nk]' member='&quot;Yes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]</column>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:MotorInsurance:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' value='59' />
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]' value='235' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' />
              <text column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[pcto:cnt:MotorInsurance:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.58171272277832031' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[cnt:MotorInsurance:qk]</rows>
        <cols>([federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:MotorInsurance:nk] / [federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)])</cols>
      </table>
      <simple-id uuid='{BA18DF56-F522-4827-B396-835890507085}' />
    </worksheet>
    <worksheet name='iftravel'>
      <table>
        <view>
          <datasources>
            <datasource caption='QUB_Insurance_Data_Assignment_Training' name='federated.1vuwtf11x91yva1gt6eeo00ir8n1' />
          </datasources>
          <datasource-dependencies datasource='federated.1vuwtf11x91yva1gt6eeo00ir8n1'>
            <column datatype='string' name='[Age (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;&lt;=25&quot;'>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
                <bin default-name='false' value='&quot;&lt;=55&quot;'>
                  <value>26</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>55</value>
                </bin>
                <bin default-name='false' value='&quot;&gt;=56&quot;'>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>84</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Travel Insurance' datatype='string' name='[TravelInsurance]' role='dimension' type='nominal' />
            <column-instance column='[TravelInsurance]' derivation='Count' name='[cnt:TravelInsurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TravelInsurance]' derivation='None' name='[none:TravelInsurance:nk]' pivot='key' type='nominal' />
            <column-instance column='[TravelInsurance]' derivation='Count' name='[pcto:cnt:TravelInsurance:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Age (组)]' member='&quot;&lt;=25&quot;' />
              <groupfilter function='member' level='[Age (组)]' member='&quot;&lt;=55&quot;' />
              <groupfilter function='member' level='[Age (组)]' member='&quot;&gt;=56&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:TravelInsurance:nk]'>
            <groupfilter function='level-members' level='[none:TravelInsurance:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]</column>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:TravelInsurance:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]' value='258' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' />
              <text column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[pcto:cnt:TravelInsurance:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.5487293004989624' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[cnt:TravelInsurance:qk]</rows>
        <cols>([federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:TravelInsurance:nk] / [federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)])</cols>
      </table>
      <simple-id uuid='{0414E497-D07D-44BD-8FD9-10E9256E0FE8}' />
    </worksheet>
    <worksheet name='motorType'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>The main customers of Single insurance is the people between 26 and 55 (account for half of the total motor insurance) while the main customer of Bundle insurance is the young (younger than 25)</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='QUB_Insurance_Data_Assignment_Training' name='federated.1vuwtf11x91yva1gt6eeo00ir8n1' />
          </datasources>
          <datasource-dependencies datasource='federated.1vuwtf11x91yva1gt6eeo00ir8n1'>
            <column datatype='string' name='[Age (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;&lt;=25&quot;'>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
                <bin default-name='false' value='&quot;&lt;=55&quot;'>
                  <value>26</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>55</value>
                </bin>
                <bin default-name='false' value='&quot;&gt;=56&quot;'>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>84</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Gender]' new-bin='true'>
                <bin default-name='false' value='&quot;female&quot;'>
                  <value>&quot;f&quot;</value>
                  <value>&quot;female&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;male&quot;'>
                  <value>&quot;m&quot;</value>
                  <value>&quot;male&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column caption='Health Type' datatype='string' name='[HealthType]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Motor Type' datatype='string' name='[MotorType]' role='dimension' type='nominal' />
            <column caption='Travel Type' datatype='string' name='[TravelType]' role='dimension' type='nominal' />
            <column-instance column='[MotorType]' derivation='Count' name='[cnt:MotorType:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HealthType]' derivation='None' name='[none:HealthType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[MotorType]' derivation='None' name='[none:MotorType:nk]' pivot='key' type='nominal' />
            <column-instance column='[TravelType]' derivation='None' name='[none:TravelType:nk]' pivot='key' type='nominal' />
            <column-instance column='[MotorType]' derivation='Count' name='[pcto:cnt:MotorType:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:MotorType:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:MotorType:nk]' />
              <groupfilter function='member' level='[none:MotorType:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[排除(Gender (组),Health Type)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[Gender (组)]' />
                <groupfilter function='level-members' level='[none:HealthType:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:HealthType:nk]' member='%null%' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Gender (组)]' member='&quot;female&quot;' />
                    <groupfilter function='member' level='[Gender (组)]' member='&quot;male&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[Gender (组)]' />
                  <hierarchy name='[none:HealthType:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[排除(Gender (组),Travel Type)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[Gender (组)]' />
                <groupfilter function='level-members' level='[none:TravelType:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:TravelType:nk]' member='%null%' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Gender (组)]' member='&quot;female&quot;' />
                    <groupfilter function='member' level='[Gender (组)]' member='&quot;male&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[Gender (组)]' />
                  <hierarchy name='[none:TravelType:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[排除(Gender (组),Travel Type)]</column>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[排除(Gender (组),Health Type)]</column>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:MotorType:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:MotorType:nk]' value='41' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]' value='129' />
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:MotorType:nk]' value='127' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' />
              <text column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[pcto:cnt:MotorType:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.82359117269515991' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[cnt:MotorType:qk]</rows>
        <cols>([federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:MotorType:nk] / [federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)])</cols>
      </table>
      <simple-id uuid='{41F25FEF-60C6-48D6-B601-A35668740DC0}' />
    </worksheet>
    <worksheet name='travelType'>
      <table>
        <view>
          <datasources>
            <datasource caption='QUB_Insurance_Data_Assignment_Training' name='federated.1vuwtf11x91yva1gt6eeo00ir8n1' />
          </datasources>
          <datasource-dependencies datasource='federated.1vuwtf11x91yva1gt6eeo00ir8n1'>
            <column datatype='string' name='[Age (组)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;&lt;=25&quot;'>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
                <bin default-name='false' value='&quot;&lt;=55&quot;'>
                  <value>26</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>55</value>
                </bin>
                <bin default-name='false' value='&quot;&gt;=56&quot;'>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>84</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Travel Type' datatype='string' name='[TravelType]' role='dimension' type='nominal' />
            <column-instance column='[TravelType]' derivation='Count' name='[cnt:TravelType:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TravelType]' derivation='None' name='[none:TravelType:nk]' pivot='key' type='nominal' />
            <column-instance column='[TravelType]' derivation='Count' name='[pcto:cnt:TravelType:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Age (组)]' member='&quot;&lt;=25&quot;' />
              <groupfilter function='member' level='[Age (组)]' member='&quot;&lt;=55&quot;' />
              <groupfilter function='member' level='[Age (组)]' member='&quot;&gt;=56&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:TravelType:nk]'>
            <groupfilter from='&quot;Backpacker&quot;' function='range' level='[none:TravelType:nk]' to='&quot;Standard&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]</column>
            <column>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:TravelType:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' value='31' />
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:TravelType:nk]' value='57' />
            <format attr='width' field='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]' value='55' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' />
              <text column='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[pcto:cnt:TravelType:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[cnt:TravelType:qk]</rows>
        <cols>([federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:TravelType:nk] / [federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)])</cols>
      </table>
      <simple-id uuid='{189B8346-3A22-4740-9F4C-D2DCF2559877}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='motorType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Gender (组)]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[PrefChannel (组)]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Age:qk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthInsurance:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthType:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:MotorInsurance:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:MotorType:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Occupation:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:PrefChannel:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:TravelType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA4291AB-6A54-4FA6-B068-05A4D98946FE}' />
    </window>
    <window class='worksheet' name='ifmotor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:MotorInsurance:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06D80B49-91AE-411F-9E91-317D506C7A57}' />
    </window>
    <window class='worksheet' name='healthType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthInsurance:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthType:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BA89FC8-251B-4613-A1CF-DD8E09A30A39}' />
    </window>
    <window class='worksheet' name='ifhealth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Gender (组)]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthInsurance:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52F6D216-E48A-46C0-A56D-10F771CCE424}' />
    </window>
    <window class='worksheet' name='travelType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:TravelType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3503D8B0-4B37-4C53-B349-007A0C6CB339}' />
    </window>
    <window class='worksheet' name='iftravel'>
      <cards>
        <edge name='left'>
          <strip size='164'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:TravelInsurance:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:TravelInsurance:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E9D9589-798E-4747-A334-F2D98D48629F}' />
    </window>
    <window class='worksheet' name='PreChannel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Age (组)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[PrefChannel (组)]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C1972A0E-2D70-42BF-95CC-88EA547A981A}' />
    </window>
    <window class='worksheet' name='cluster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:AdhocCluster:2:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[Gender (组)]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[cnt:Age:ok]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:AdhocCluster:2:ok]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Gender:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:HealthType:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Location:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Occupation:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:PrefChannel:nk]</field>
            <field>[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:TravelType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{89D79342-76AF-4B1D-BE76-F193F154F994}' />
    </window>
    <window class='worksheet' name='ageDist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vuwtf11x91yva1gt6eeo00ir8n1].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C8D0A728-DD37-4FE9-A863-93C150E81760}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='PreChannel' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='ageDist' width='384'>
      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
      dV3TJ2NM242dr+3O1zrRDvOPswCw1qrRaCjLMiVJ0vz3ueee009/+lOtXLlSu3bt0unTp3Xl
      yhU9/vjjMz4H8PGZwPTApqnba94VRaEoipQkidO60tRyrFar1PVUN89zpWn6qTcrX5S1VpVK
      xcsk4kOaJkqSpK3Gztd212g0lCSJ83WiHeYfpz27dOmS7t69q8nJSXV3d+vs2bPKskzPPPOM
      6vW6KpWK1q5dqytXrrhsFgAwB84CIIoibdq0SZs2bWret2rVqgc+t7e311WzAIA54jwAAAgU
      AQAAgSIAACBQBAAABIoAAIBAEQAAECgCAAACRQAAQKAIAAAIFAEAAIEiAAAgUAQAAASKAACA
      QBEAABAoAgAAAkUAAECgCAAACBQBAACBIgAAIFBOfxTeWquJiQnVajUlSaLJyUnduXNH9Xpd
      SZIojqfypigK1Wo1l00DAB6S0wA4d+6c9u/fr5deeklr167V+++/r0qlomvXrmnz5s2q1+u6
      du2a6vW6tmzZ4rJpAMBDchoAvb29yrJMklSpVLR7925duXJFN2/eVFmWOn36tIwxeuaZZ2St
      lbVW0tSeQ1mWLrvSrOuj9nTdKIqc1p2u7WtZUNffOnF/bdc1fbC2PcdOkrftuZ3qSm6Wg9MA
      uH9CtNbq/Pnz+uijj/TVr35Vp06d0sjIiNavX/+pF1CWpYqicNmVZh98bJRlWSqKIi8bp69l
      Qd17dY0xXur66K8vpTFtOXZRFDmfUI0xXt7Q+Z5/FlUAWGs1OTmpiYkJSdLdu3d15MgRDQ4O
      qigKJUmi5557TmfPntWlS5fU09OjNE2b/7dSqbjqStP0wE6340pRFIqiSEmSOK0rTS2LarVK
      XU918zxXmqbNz6NcybJMlUrFyyTiQ5ImSpKkrcbO13bXaDRmfEbpSjvMP057du3aNZVlqTt3
      7uju3btav369Tp8+rY6ODvX09KhSqWjdunUaHh522SwAYA6cBUAURdq4caM2btzYvG/lypUP
      fO6GDRtcNQsAmCPOAwCAQBEAABAoAgAAAkUAAECgCAAACBQBAACBIgAAIFAEAAAEyu05ygDa
      wq07ua7dnFC1MnXNniSJtXJZ5wL3CvONAAAC9N3X39d3X7/39/pVS/Vf//C3Fq5DWBAcAgKA
      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
    </thumbnail>
    <thumbnail height='384' name='cluster' width='384'>
      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
      GvUwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='healthType' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='ifhealth' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='ifmotor' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='iftravel' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3daXAcZ37f8W/39GAGHABDXMRBEhDBA6QEkqJ4SCJWS4iktBJ1pORyytnE
      5SqVN7W1lVS5KpuyU3EOv0jeJJVKxS+cXa/LUTlbu/auV1aklZYyD5HEAhIECuIhUhRIgThI
      YHAQBEAM5uzuvIA0ElYLaSjNYAD17/OG3TOYmX9L089vnqf76TZc13URERHPMQtdgIiIFIYC
      QETEoxQAIiIepQAQEfEoBYCIiEdZhS5ARGQlunDhAm+99RYA69at48iRI3f1+omJCd5++22O
      HDmC4zh0dnayZ88egsFgPsr9rRQAIiJfwsaNG5mYmODKlSs89NBDXLlyhVQqhWVZDA0N4TgO
      Dz30EAMDA+zYsYNLly6xZs0aOjo6aGxspLq6msHBQQBc16W9vZ3169czNDTE2NgY3/jGNwA4
      c+YMGzdupKysjIqKCiYnJwmFQoyPj5NMJqmtraW7u5vKykp27drFxYsXGRsbo6Wlhfr6et54
      4w1Wr17N5s2bOXHiBHv27GHTpk2AhoBERL6UUChEZWVlpmF++eWX+elPf4rjOFRWVtLX18c7
      77zDiRMnuHbtGkePHuXll1/GMAyOHj1KJBL5zHuOjo5y7NgxAI4ePcovfvEL/H4/Pp+Prq4u
      hoeH6erqore3lz//8z/n4sWLOI7D2rVraW9v59133+WVV14hEAjw0ksv8eKLLxKLxSgvL+eF
      F16gqqqKn/zkJ8zNzQEKABGRnCgtLeW73/0uxcXFvPrqq9y5c4eZmRk2b97MqVOnaGhoYHx8
      nEuXLhEKhRZ9n40bN9LS0gLAE088weXLlzl9+jS2bS/4u61bt/IHf/AH3Lx5kxMnTnDnzh1i
      sRg1NTXs3r0by7KYmZlh3759bNq0iUgkwoULF1izZg3pdBpQAIiI5IRpmpimSTKZZG5ujjt3
      7gBw3333cebMGbZv387evXuZnp7GNE18Pt9n3sMwjAXr58+fJxAIEI1GWb16NX/zN3/Dr3/9
      awAsy8I0TeLxOHNzc0Sj0c+8X0tLCz/4wQ/4xS9+wf3338/k5CSWZWU+29ClIEREciuZTGYa
      aNd1icfjBAIBTNMklUotGgC/yXVd5ubmCAaDmcY+GAx+JigSiQRFRUWfeRwgnU5nwimRSOD3
      +zHN+d/+CgAREY/SEJCIiEctywAYHh4udAkiIl97yzIAREQk/xQAIiIepQAQWQYGBwd54YUX
      iMfjXL58mZGRkUKXJB6gS0GILBNr167l2rVrmKbJ7Owsr776KrZts3PnThobGwtdnnwNqQcg
      skx8PFM0FosxNjbG1q1bOXjwIDdv3ix0afI1pQAQWSYMw2DTpk309vbi8/mIx+MkEgksSx11
      yQ8FgMgyEA6HqaysZN26dWzdupWtW7cSi8W4dOkS27ZtK3R58jW1LGcCDw8PU19fX+gyRES+
      1tQDEBHxqGU5uHjnzh3NBhYRybNlGQClpaUaAhIRyTMNAYmIeFTOA8B1XRY7rpxOpzN3ogGI
      x+O5/ngREclSToeAbty4walTp2htbWXDhg387Gc/o7q6mvr6eiorK+no6MC2bQ4fPkxXVxfB
      YBDbtmlra8tlGSIikoWc9gDq6+vZv39/Zt1xHLZu3UpzczMXL17kyJEjHD58mMuXL+O6Lo88
      8gjJZDKXJYiISJZy2gP4+DZjH3vwwQcZHBzknXfeIRgMYlkWgUCAZDKZuXXZx6+xbRvHcYD5
      oaJEIpHL0kRE5Dfk7SygRCJBRUUFjY2NvPrqq1RXVzM4OEg0GqW+vj7TC4jFYgD4fL7MPTI/
      DgoREcmfnAZAX18fAwMDAASDQT788ENisRgPP/wwFRUVtLe3Y1kW+/fvJxAIcOzYMfbu3ZvL
      EkREJEu6FISIiEdpHoCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiUAkBExKMUACIiHqUAEBHx
      qGV5QxiRlWr0dpSTPdcLXUbGwQc2UFMeKnQZskwpAERyaOx2lL898V6hy8ho2bBGASCL0hCQ
      iIhHKQBERDxKASAi4lEKABERj1IAiIh4lAJARMSjFAAiIh6lABAR8SgFgIiIR+U0AFzXpaen
      h8nJycxj586dY2JiAsdxaG9vp7OzE9d1GRoa4vjx40QikVyWICIiWcppANy8eZNoNMr09DQA
      ExMTXL16lVu3bnH+/Hmampqorq6mt7eX8+fPc+jQIc6ePZvLEkREJEs5vRbQunXrSCaTmfWu
      ri4efPBBYrEYExMT7Nq1i2QyyZtvvkkgEMAwDAKBAAC2beM4DgDpdJpEIpHL0kSWRCqVKnQJ
      C6RSKe1Lsqi8XQyuv7+fmZkZ3n77bWzbpqamhng8TiwWo7i4mHg8DpBp9H0+Hz6fb74oy8oE
      g8hK4vf7C13CAn6/X/uSLCqnAdDX18e5c+cwDIPW1la+/e1vMzQ0xNzcHNXV1bz22mvYts2T
      Tz5JZ2cnp0+f1pdTRKRAchoATU1NNDU1LXhs/fr1meVnnnkGwzCwLIvHH3+ceDxOMBjMZQki
      IpKlJb0fwG92j9X4i4gUjuYBiIh4lAJARMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJR
      CgAREY9SAIiIeJQCQETEoxQAIiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiU
      AkBExKNyHgCu6+K6LgCO4xCPxzPPpdNp0ul0Zv3Tz4mIyNLK6T2Bb9y4walTp2htbaWhoYET
      J05QXFyMbdu0tLTQ0dGBbdscPnyYrq4ugsEgtm3T1taWyzJERCQLOe0B1NfXs3//fgB8Ph/f
      /OY3qaqqwufzcfHiRY4cOcLhw4e5fPkyruvyyCOPkEwmc1mCiIhkKac9ANNcmCcjIyP09fVR
      V1fH5OQklmURCARIJpMYhrHgNbZt4zgOMD9UlEgkclmayJJIpVKFLmGBVCqlfUkWldMA+LRE
      IkFdXR333HMPL730Ek1NTQwODhKNRqmvr8/0AmKxGDDfY/D5fPNFfRQUIiuN3+8vdAkL+P1+
      7UuyqJwGQF9fHwMDA8B8g/7hhx+SSCTYu3cv9fX1tLe3Y1kW+/fvJxAIcOzYMfbu3ZvLEkRE
      JEs5DYCmpiaampoy6w0NDQueP3DgQGZ5/fr1rF+/PpcfLyIid0HzAEREPEoBICLiUQoAERGP
      UgCIiHiUAkBExKMUACIiHqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1IAiIh4lAJARMSj
      FAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJRCgAREY/KaQC4rktPTw+Tk5OZ5ddff52hoSEc
      x6G9vZ3Ozk5c12VoaIjjx48TiURyWYKIiGQppwFw8+ZNotEo09PTuK5LbW0t3/rWt3j33Xc5
      f/48TU1NVFdX09vby/nz5zl06BBnz57NZQkiIpIlK5dvtm7dOpLJJACmaVJbW8vrr79Oc3Mz
      g4OD7Nq1i2QyyZtvvkkgEMAwDAKBAAC2beM4DgDpdJpEIpHL0kSWRCqVKnQJC6RSKe1Lsqic
      BsBvev3119m5cyf19fWMjIwQj8eJxWIUFxcTj8cBMo2+z+fD5/PNF2VZmWAQWUn8fn+hS1jA
      7/drX5JF5TQA+vr6OHfuHIZh4Pf7uX79OsFgkNHRUXbs2MFrr72Gbds8+eSTdHZ2cvr0aX05
      RUQKxHBd112qD0ulUhiGgWXN5048HicYDH7m74aHh6mvr1+qskRy5mLfGP/hr04WuoyM//Kd
      g2xvWlPoMmSZyusQ0G/6ze7xb2v8RURkaWgegIiIRykAREQ8SgEgIuJRCgAREY9SAIiIeJQC
      QETEoxQAIiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiUAkBExKMUACIiHqUA
      EBHxKAWAiIhHKQBERDwqpwHgui4jIyPMzc0B8/f8vXnzZua569evMzAwgOu6TE9P09vby+zs
      bC5LEBGRLOU0AG7evMnZs2cZHR0F4N1336W7uxuAvr4+JiYmGBoaYnh4mM7OTgKBAJ2dnbks
      QUREspTTm8KvXbuWZDKZWX/ooYc4efIkAP39/bS1tZFIJOjp6cGyLBobG+nt7QXAcRxc180s
      p9PpXJYmsiQcxy50CQs4jq19SRaV0x6AYRiLrhuGgeu6OI6DaZqZxv7jf0VEZGnltAdw+/Zt
      IpEIhmFQVVXF5OQkt2/fZnh4mA0bNtDd3U0ymaS5uZmenh76+/szAWCan2SRaZpYVk5LE1kS
      pukrdAkLmKZP+5IsKuffjLq6ugXru3btAuCee+7BdV1M06SmpobW1lYikQitra25LkFERLKQ
      0wAoLy+nvLw8s15aWrrg+aampsxyOBwmHA7n8uNFROQuqG8osoQqyooxDYOJ6Tkqy4qpqSjh
      1vQco7ejAJSuKqKuspRkyiYyOUtNeYgivw/HdZmYmqO2soTB0WlcF/yWyZ255Bd8osjiNBFM
      ZImsLgnQ2rKelqY1+EyDb+5sJJmyefDedRQH5n+LbW2ooqKseMHrfD6Tb2xv4P7NtaytKmP7
      hjXsaFpDSXFRITZDvkYUACJLZGo2wZuXhkgk09iOSyJlc+89VfhMg2Rq/vTR0uIiwqEAfstH
      MmUzMDpNMmVzZWCCWCKNaRpUrQ5RXlbMPbWrM8Eh8mUoAESW0McnPQf8PlzX5cKHo0TjKVYF
      /QC89f5Nzl8b5b57qqitKMEwYMu6Sq4MTnDp+hgT03MkUmlWBf2YpkFTXfniHybyBfTzQWSJ
      hIJ+7qlZTW1FCWs+Gtv3+UyK/D7CoSAlxUVUlBWTTNkk0zZp26G+qpS5RJLpaAKA2bkkqZSN
      YRgE/D5sR/No5MtTAIgsoelogkv948STaTouDrGmPMTZK8NMzcYpLrIYnYyyZnWICx+OMTYV
      paS4iLNXRjKvn5ieIxpPcmN8hpqKEvpHpgq4NbLSKQBElkg0nuLazckFj01Mz2WW48n0Zx6b
      jS08y2dqNg7AdDqR6RWIfFk6BiAi4lEKABERj1IAiIh4lAJARMSjFAAiIh6lABAR8SgFgIiI
      RykAREQ8SgEgIuJRCgAREY9SAIiIeJQCQETEo3IaAK7rMjIywtzc/MWsxsfH6e3tJZFI4Lou
      169fZ2BgANd1mZ6epre3l9nZ2VyWICIiWcppANy8eZOzZ88yOjqKbdt0dXXh8/no7u6mr6+P
      iYkJhoaGGB4eprOzk0AgQGdnZy5LEBGRLOX0ctBr164lmZy/fO3U1BR1dXVs3LiRvr4++vv7
      aWtrI5FI0NPTg2VZNDY20tvbC4DjOLium1lOp9O5LE1kSTiOXegSFnAcW/uSLCqnPQDDMD55
      Y9PEcRxgfmjIMAxc18VxHEzTzDT2H/8rIiJLK6c9gNu3bxOJRDAMg6qqKkZGRrh69SqrVq1i
      7dq1dHd3k0wmaW5upqenh/7+/kwAmOYnWWSaJpale9XIymOavkKXsIBp+rQvyaJy/s2oq6sD
      5hvxhx9+mMnJSfbu3UtRURGu62KaJjU1NbS2thKJRGhtbc11CSIikoWcBkB5eTnl5eWZ9VAo
      RHV1dWa9qakpsxwOhwmHw7n8eBERuQuaByAi4lEKABERj1IAiIh4lAJARMSjFAAiIh6lABAR
      8SgFgIiIRykAREQ8SgEgIuJRCgAREY9SAIiIeJQCQETEoxQAIiIepQAQEfEoBYCIiEcpAERE
      PEoBICLiUQoAERGPymsAuK5LOp3OrDuOg+M4mfVPPyciIksr5zeF/1g6neb06dMAbNmyhYqK
      Cjo6OgA4cOAAly9fZmpqiurqalpaWvJVhoiILCLrALBtm1deeYVYLEZtbS0HDhzANBfvQIyN
      jVFeXs7OnTs5fvw4ZWVl7Nu3j7m5Od5//30ikQhPPPEER48eVQCIiBRA1gEwPDxMIpHAtm1u
      3LjB7OwsZWVli/59RUUFnZ2dRKNRbt++jWmahMNhiouLuXbtGpZlYRgGljVfgm3bmeGhdDpN
      IpH4ipsmsvRSqVShS1gglUppX5JFZR0A1dXVRCIRJiYmqKiooKSk5HP/PhgM8uSTTzI7O0s8
      HqesrIxbt24xNzdHeXk5Q0NDuK6b2WF8Ph8+n2++KMsiEAh8hc0SKQy/31/oEhbw+/3al2RR
      WQeAYRi0tbVRVVXF2NgYhmF84Wu6u7tJpVLs2rWLVatWcebMGQAOHjxIKpXi5MmTNDQ0fPnq
      RUTkS8s6ACYmJvjggw/YsWMHR48eZcuWLYRCoc99zTe+8Q0Mw8j8sn/ssccwDAPTNHnggQdI
      p9OZISAREVlaWZ8GWlNTw9TUFD/84Q/x+XysWrXqC19jWVam8Yf5YZ5PHzhW4y8iUjh3NQS0
      bds2JiYmKCkpwXGcBY27iIisLFn3ACKRCN3d3TQ0NFBRUZHVMQAREVm+su4BlJWVcefOHaam
      poD5Wb4iIrJyZR0AgUCAp556SpdvEBH5mriro7Bnzpxhenoa13XZvXu3jgGIiKxgWQfA6Ogo
      a9eupaamBsMwSCaTy27Si4iIZO+uTgNdv349JSUlDA4O6te/iMgKl3UPIB6PE4lEeO6553jq
      qad0Dr+IyAqXdSvu9/t566238Pl8hEIhHn30UfUCRERWsKwDwOfz8Xu/93v5rEVERJZQ1gGQ
      TCbp7OwEYHx8nB07dqgHICKygmUdAKFQiO985zsA/PjHPyYej+ssIBGRFSzrAIhGo/z1X/81
      ALOzszoILCKywmXdihcXF/PMM88Qj8cZGRkhGAzmsy4REcmzrANgbGyMc+fOMTAwgGVZ7N69
      m3A4nM/aREQkj+7qYnC9vb1s2bIF27Z1mzkRkRXuroaADhw4gGVZxGIxioqK8lmXiIjk2V3d
      D+CNN97I3Nhdl4MWEVnZsu4BlJaW4vf7qampAcjqhjDDw8NEo1Hq6uoIhUL09/djmiYNDQ3M
      zMwwOjpKfX09JSUlX34LRETkS8m6B+D3+9m+fTvj4+OMj49/YQ8gmUzyzjvvEAgEePPNN+nr
      62NiYoKhoSGGh4fp7OwkEAhkJpeJiMjSyqoHcOvWLY4fP77gsS8KgI+PFVy7do1wOEx/fz9t
      bW0kEgl6enqwLIvGxkZ6e3sBcBwn856O4+jGM7IiOY5d6BIWcBxb+5IsKqsAWLVqFTt37lzw
      mGl+fuchGo1SVVVFc3MzH3zwAYZh4LoujuNgmmamsdexBBGRwsgqAIqLi9m6detdvbHjOKRS
      KdLpNMlkkubmZrq7uzPLPT099Pf3ZwLg04FimqZmGsuKZJrL6/pYpunTviSLyuqbcePGDfr6
      +hY81tra+rkXgwuHw7S0tBCNRmltbaWkpATXdTFNk5qaGlpbW4lEIrS2tn61LRARkS8lqwDw
      +XwEg0Fc1yWdTmd9FdC1a9cuWG9qasosh8NhzSQWESmgrAKgrq6OqqoqfvzjH5NOp6mrq9PY
      vYjICpf1aaAjIyOUlpZSWlrK2NgYsVgsn3WJiEieZR0AdXV1TE5OcvHiRRzH0eQtEZEV7q7u
      CFZZWcnu3bu59957s5oJLCIiy1fWPYBgMEhLSwsffvghf/Znf8adO3fyWZeIiORZ1j2AVCpF
      T08PU1NTHDhwQDeEERFZ4bIOANM0aWxsZOfOnViWpRvCi4iscFkHQCwW4+TJk5nLOfzpn/7p
      F14OQkRElq+7CoCtW7cyMzNDLBYjGo1qIpeIyAqWdQBUVFSwbds2XNelr69Pp4GKiKxwWY/h
      pFIp2tvb2bZtG88++6yOAYiIrHB3NYg/ODjIX/zFX/CjH/2IVCqVr5pERGQJZDUENDExQTQa
      5Y//+I8/eaEuMSsisqJl1YqPjIxw9uxZ9u7dm3msrKxMs4FFRFawrH/Gj4yMcPXq1cz61q1b
      dRqoiMgKllUAlJWV8fTTT7Njx4581yMiIkskqwBYt24dDQ0N2Lats39ERL4mshrDOXr0KP39
      /Zw6dYpEIkEikdANYUREVrisegCbNm3iJz/5CZFIhEuXLgHwve99D7/ff1cf5jgO8MkN4NPp
      tM4mEhEpkKxa3+bmZr7//e9z5coVTNOkvr7+CxvuaDTK22+/DcDc3BxtbW10dHQAcODAAS5f
      vszU1BTV1dW0tLR8xc0QEZG7dVczgY8fP87w8DAvvPACyWTyc/8+FArx6KOPsmXLFmpra7lw
      4QL79u2jpaWF999/n0gkQltbG0NDQ195I0RE5O5lPf4yMzNDVVUVDz74IP39/cTjcQKBwBe+
      7sKFCxw+fJhTp04RDocpLi7m2rVrWJaFYRiZnoRt25khonQ6TSKR+JKbJFI4y22GfCqV0r4k
      i8o6AOrq6qiqquLFF1+kqamJsrKyL3zNrVu3KC0txe/3U1ZWxq1bt5ibm6O8vJyhoSFc183s
      MD6fL3OGkWVZWYWLyHJzt8fF8s3v92tfkkXd1Q1hnn766bt684GBAXbv3g3A9u3bOXPmDAAH
      Dx4klUpx8uRJGhoa7uo9RZazkBFnm3+g0GVkhIx4oUuQZcxwszyfc25ujqGhIZqbm3nvvffY
      tGnTXd8W0rZtDMP4wrOAhoeHqa+vv6v3FlkO0kPdxP7++UKXkVH8u/8Ha/3eL/5D8aSsDgK7
      rsurr77Kz3/+c44ePcrPf/5zbNu+6w/z+XwLLh+hU0BFRAon6xZ43bp12LZNfX09zz//PKFQ
      KJ91iYhInmXVAzAMg507d3Lr1i26uro4duzYsjvbQURE7k7WPYDp6WlCoRDPPvvs/As1fCMi
      sqJlPRGstLSUa9eu8eKLL/Liiy+STqfzWZeIiORZ1j/ji4qKeO655zLruheAiMjKlnUA2LZN
      f38/AOfOnWPHjh26NLSIyAqWdQD4/X527twJzE/wmp2dpby8PG+FiYhIfmUdAKlUinPnzgGw
      cePGrC4FISIiy1fWA/lFRUU4jsPo6Ciu6+oYgIjICpd1Kz4yMkIymeT5559nbGyM6enpfNYl
      IiJ5lnUAVFRUMDo6yrFjx5idndVMYBGRFS6rYwDxeJzZ2Vn+8A//kPHxcTZv3qyJYCIiK1xW
      PYArV65w/vx5Vq9ezebNm2lvbycajea7NhERyaOsfsbX1NRw4sQJtmzZQiqVYnx8/K4vBS0i
      IstLVgFQV1fHoUOHOH36ND6fj9///d/XEJCIyAqXdSt+//33c//99+ezFhERWUI6mV9ExKMU
      ACIiHpXXAJienqa3t5eJiQlc1+X69esMDAzgum7mudnZ2XyWICIii8hbALiuS2dnJ8XFxQD0
      9fUxMTHB0NAQw8PDdHZ2EggE6OzszFcJIiLyOfJ2Kk80GuX27dv09/fT2NhIf38/bW1tJBIJ
      enp6sCyLxsZGent7AXAcB9d1M8u64YysRI5jF7qEBRzH1r4ki8prD6C8vJwdO3Zw4cIFDMPA
      dV0cx8E0zUxj//G/IiKytPLWAygpKSGdTjMzM0NRUREbNmygu7ubZDJJc3MzPT099Pf3ZwLg
      01cXNU1T8wxkRUqby+smSabp074ki8rbN8MwDFpbWxkfH+ehhx6itLQ0cxnpmpoaWltbiUQi
      tLa25qsEERH5HHn9aVBRUUFFRUVmvampKbMcDocJh8P5/HgREfkcmgcgIuJRCgAREY9SAIiI
      eJQCQETEoxQAIiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiUAkBExKMUACIi
      HqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1rSAHAcB8dxMuvpdHopP15ERD4lr/cEPnbs
      GJZlUV9fz7p16+jo6ADgwIEDXL58mampKaqrq2lpaclnGSIi8lvktQcQi8XYs2cPzc3NXLhw
      gX379tHS0sL7779PJBKhra2NoaGhfJYgIiKLyGsPoKKigrfffpvS0lJmZ2cJh8MUFxdz7do1
      LMvCMAwsa74E27Yzw0PpdJpEIpHP0kTywkmlCl3CAqlUClv7kiwibwGQTqfZs2cPgUCAl19+
      mdraWm7dusXc3Bzl5eUMDQ3hui6pj3YYn8+Hz+ebL8qyCAQC+SpNJG/Sfj/L6ciW3+/H0r4k
      i8hbANi2nRnzb25upqGhgTNnzgBw8OBBUqkUJ0+epKGhIV8liIjI58hbAAQCAQ4ePIht25lh
      nsceewzDMDBNkwceeIB0Op15TkREllZeW99Pj/EDmSGezIer8RcRKRhNBBMR8SgFgIiIRykA
      REQ8SgEgIuJRCgAREY9SAIiIeJQCQETEoxQAIiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoA
      ERGPUgCIiHiUAkBExKMUACIiHqUAEBHxKAWAiIhH5T0ARkZGiEajuK7L9evXGRgYwHVdpqen
      6e3tZXZ2Nt8liIjIb5HXAIhGo5w4cYIbN27Q19fHxMQEQ0NDDA8P09nZSSAQoLOzM58liIjI
      IvJ6V/auri727NkDQH9/P21tbSQSCXp6erAsi8bGRnp7ewFwHAfXdTPL6XQ6n6WJ5IXj2IUu
      YQHHsbUvyaLyFgCRSITbt29jmiapVAqfz4frujiOg2mamcb+439FRGRp5S0AwuEwDz/8MJFI
      hEQiQW1tLd3d3SSTSZqbm+np6aG/vz8TAKb5yWiUaZpYVl47JyJ5kTZ9hS5hAdP0aV+SReXt
      m1FcXExxcTEVFRU4jkNxcTGu62KaJjU1NbS2thKJRGhtbc1XCSIi8jny/tMgGAxmlpuamjLL
      4XCYcDic748XEZFFaB6AiIhHaXAwx3564r1Cl5DRsmEN25vWFLoMEVmmFAA59rfLKAD+2aEW
      BYCILEpDQCIiHqUAEBHxKAWAiIhHKQBERDxKASCyRFzX5Z3BGF3X5wAYmU7xVx2T/OLcNLYz
      PyP+ymiC/33mFu3XogDcidu8dH6ambjNzakUP2y/xc2pFJGZFNfGEwXbFvl60FlAIktkbNbm
      6liCIsvAcV3+4fwM/2LvakoCJqYBtuPyj5fv8N1HKvm7d6a4p7KI67eSjEynmcm4q8sAAAgm
      SURBVE04vHV9jl3ri+m6PkfKcXlsa0mhN0lWOPUARJZITanFI5tCWKZBNOHQO5rgRx2T/PDX
      k6RsMA2IJh1ev3yH/okkk9E039wUoi7sByBcbPL/LswwPJPm1qzNX3ZMMjKdKvBWyUqmABAp
      gCKfwbbaAN8/VMW61X4GbycxDIM/erSKmjKLhsoiQoGFu+eh5hL+6NEqqkI+DAMe21rKlVEN
      A8mXpyEgkSUyOJnk79+dYWAySWXIR0XIxw/aJ5lLOmysLqKzL4rrQu9Ykrmkw/pyP7+8OMMb
      vbMMT6f49p7VXLwZ5966IJdG4vzy4gz/ZGdZoTdLVjAFQIEEiyziyfRnHkul7cwBwU+zfCZp
      21mq8iQPGiqK+DeHqhY8NpuwCVomls8A5o8DtNQHKQuaGIbB09vLeHr7J438o80hDAxa6gOk
      bJeApU68fHkKgCVmGgb/9NF7mYkmCPh9vPTrDwBo23UPRZbJ1GyC23dibF5XSV1lCe8PTFAV
      XsXqkgC/fPMqD25byxvv9n8mPGRlKgksvH+AzzQIFy9+TwHTmA8KA4OAZeS1Nvn608+HJea4
      Ln938hJd799ccBOctVWlTN6Jc/XGLa7emOS1t65yZy5B1+UbGAZ0XxmmZcMaZmNJSlcVFXAL
      ROTrQgFQAPfUrubIQ5t5ueODzGOVZcWM347yuwfuBaC8NMjMXBLbcflg8BZbG6sI+H001IR5
      8sHN+NX1F5GvSENABfDIzgb+7+sXgI/G/W2H8ak5BkanmbwTA6Dt/nv4Vdc1AK4MThDw+7h9
      J8aqoJ+ZaOKj4wXJgm2DiKx8CoAlFvD7mJ1L8tTDm7k1HWNsKsrtmRinzw/wbGszV29MAnDt
      xuSCcf604zA4NkPV6hBloQB35tT4i8hXowBYYomUzT+0X/nM47dn47w88cmQ0MXrYwuev3R9
      HICe3pH8FiginpG3AHAch/b2dlKpFPfddx81NTV0dHTg8/l4+OGHuXHjBh988AEtLS3U1tbm
      qwwREVlE3o4kGobBvn37OHToEGfPnuX8+fM0NTVRXV1Nb28v58+fzzwnIiJLL289AMMwGBgY
      4MSJEzz11FNcvXqVXbt2kUwmefPNNwkEAhiGQSAQAMC2bRxnfqJTOp0mkdAU96/K1n/HJeek
      lte1eVKpFLa+A7KIvB4D2Lp1K42NjRw7doyysjLi8TixWIzi4mLi8ThAptH3+Xz4fPMTYCzL
      ygSDfHk+/Xdccmm/n+U0Rc/v92PpOyCLyFsATE9P09XVRVFREYFAgB07dvDaa69h2zZPPvkk
      nZ2dnD59Wg2UiEiB5C0AwuEwhw4dIpVKEQwGAXjmmWcwDAPLsnj88ceJx+OZ50REZGnldQjo
      08M6MN8d/TQ1/iIihaPrCYiIeJQCQETEoxQAIiIepUtB5NjvrDpT6BIytvlLgZZClyEiy5QC
      IMd+J7R8AqDIr8ZfRBanISAREY9SAIiIeJQCQETEoxQAIiIepQAQEfEoBYCIiEcpAEREPEoB
      ICLiUQoAERGPUgCIiHiUAkBExKMUACIiHqUAEBHxqLwHQCKRyCyn02nS6XRmPR6P5/vjRURk
      EXm7HLTjOPzqV78iFAqRTCZ54IEH6OjowLZtDh8+TFdXF8FgENu2aWtry1cZIiKyiLz1AEzT
      5KmnnuL+++/HdV0uXrzIkSNHOHz4MJcvX8Z1XR555BGSyWS+ShARkc+R1xvCDA0NcfbsWZ5+
      +mlOnz6NZVkEAgGSySSGYQDzQQFg2zaO4wDzQ0WfHjqSL8e29d9xqTmpVKFLWCCVSmHrOyCL
      yFsAuK5Ld3c3zz33HIZhUF1dzeDgINFolPr6+kwvIBaLAeDz+fD5fPNFfRQUK9Fy6s/4fCv3
      v+NKlfb7SX/xny0Zv9+Ppe+ALCJvAZBMJgmFQpw6dYrVq1ezc+dO2tvbsSyL/fv3EwgEOHbs
      GHv37s1XCSIi8jnyFgCBQIBvfetbCx47cOBAZnn9+vWsX78+Xx8vIiJfQPMAREQ8SgEgIuJR
      CgAREY9SAIiIeJQCQETEoxQAIiIepQAQEfGovF4KQkTEa0ZvRznZc73QZWQcfGADNeWh3/qc
      AkBEJIfGbkf52xPvFbqMjJYNaxYNAA0BiYh4lHoABXDhZpzOvijb64O0bpxP5pMfzHJtPElt
      mcWzO8r4h3PTRGbS/M6uMEOTSd4ZivOd/eW8NxynqaqI0qCvwFshIiudAmCJ2Y7Lry7N8CeP
      r8F23Mzj70cS/KsDlQB0fBilIuTjufvD2I7Lz96ZY989q+jun+P8zTg71xUXqnwR+RrRENAS
      G72T5v1Igv/2j+O8fGEm8/hswuG/Hh3j2Pt3OHcjztmBGP/xlVGGbqdwXXj5wgzvjSRwXPhf
      b0wUcAtE5OtCPYAlVlJkcmBziOcfruB/nvykIf+Tx6sB+E+/HGVTdRH/fO9qQkUmf9kxyb9u
      q+TGVJq3++eITKepLbMYv5OmulT/+0Tky1MLssTKin2MTKf58du3CVoGHR9Gaajw83fvTFMZ
      sigLmjxxbyn/4/g4NWUWextXYRoGr1yY4V+2VvDfj40zPJ3iuZ3hQm+KiKxwCoAC+PdPrGEq
      ZrO6+JMDuf/2cDXRhEMoMD8q95+fqiGRdin5aP1736zANAz+3beqsV0o8hkFqV1Evj4UAAXy
      6cb/Yx83/gB+n4H/U428+dE9lH2mgc7/EZFc0EFgEZElVhywOLR7A8+2bqG8NLjguf33raey
      rJjy0iBHHtrEzo01GAY8dO86Hrx3LQBb1ldi+b568/3/Aa91pJtmq7JqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='motorType' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='travelType' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
